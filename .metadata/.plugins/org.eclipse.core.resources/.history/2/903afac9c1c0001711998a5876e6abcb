//============================================================================
// Name        : Queue.cpp
// Author      : Daniel McDonough
// Version     :
// Copyright   : Daniel McDonough 2017
// Description : C++ QUEUE DEMO for MBU 2017
//============================================================================

#include "Queue.h"
#include<stdio.h>

Queue::Queue(){
	this->length = 0;
	this->head = NULL;
}

Queue::~Queue(){

}
//Push element in Queue
void Queue::push(int data) {
		head = this->head;
		tail = this-> tail;
	if (head == NULL) {
		Node* n= new Node;
		n->data = data;
		n->next = NULL;
		head = n;
		tail = n;

	} else {
		Node* n = new Node;
		n->data = data;
		n->next = tail;
		tail = n;
	}
}

// Pop first element in Queue
void Queue::pop() {
	head = this->head;
	tail = this-> tail;
	if (head == NULL) {
		printf("\nThe Queue is empty.");

	} else if (head == tail) {
		// Case when there is only 1 element in the Queue
		printf("The value %d was popped", head->data);
		delete head;
		head = NULL;
		tail = NULL;

	} else {
		Node* n = new Node;
		n = head;
		head = head->next;
		printf("\nThe value %d was popped", n->data);
		delete n;
	}
}

//Show top-most element in Queue
void Queue::top() {
	head = this->head;
	if (head == NULL) {
		printf("\nThe Queue if empty");

	} else {
		printf("\nTop number is %d", head->data);
	}
}

// Shows if the Queue is empty
bool Queue::isEmpty() {
	head = this->head;
	if(head == NULL) {
		printf("\nThe Queue is empty");
		return true;

	} else {
		printf("\nThe Queue is not empty");
		return false;
	}
}
